{"version":3,"sources":["App/newTodoForm.jsx","App/Todo.jsx","App/TodoList.jsx","App/FilterTodos.jsx","App/App.jsx","index.js"],"names":["NewTodoForm","state","name","handleSubmit","e","preventDefault","props","addTodo","setState","className","onSubmit","type","maxLength","placeholder","value","this","onChange","target","React","Component","Todo","isOpen","toggle","todo","deleteTodo","renameTodo","toggleTodo","action","id","onClick","checked","completed","TodoList","todos","map","style","backgroundColor","FilterTodos","filterTodos","textContent","App","visibleTodos","newTodo","length","todoId","filter","filterType","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e790bd4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport class NewTodoForm extends React.Component {\r\n  state = {\r\n      name: '',\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(!this.state.name){\r\n        return\r\n    }\r\n    this.props.addTodo(this.state.name);\r\n    this.setState({name: ''})\r\n  }\r\n  render(){\r\n    return (\r\n      <>\r\n        <h1 className=\"title\">Name list</h1>\r\n        <form \r\n          className=\"todo__form\"\r\n          onSubmit={(e)=> this.handleSubmit(e)}\r\n        >\r\n          <input \r\n            className=\"todo__input\"\r\n            type=\"text\" \r\n            maxLength=\"25\"\r\n            placeholder=\"Tape title\"\r\n            value={this.state.name}\r\n            onChange={(e) =>{\r\n              this.setState({\r\n                name: e.target.value\r\n              })\r\n            }}\r\n          />\r\n        </form> \r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport class Todo extends React.Component {\r\n  state = {\r\n    name: '',\r\n    isOpen: false,\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState(state => ({\r\n      isOpen: !state.isOpen,\r\n    }))\r\n  }\r\n\r\n  render(){\r\n  const { todo, deleteTodo, renameTodo, toggleTodo } = this.props\r\n  const { isOpen, name} = this.state\r\n    return(\r\n      <>\r\n        <h3>{todo.name}</h3>\r\n        {isOpen && (\r\n          <form \r\n            className=\"todo-form\"\r\n            action=\"\" \r\n            onSubmit={(e)=>{\r\n              e.preventDefault()\r\n              renameTodo(todo.id, name)\r\n              this.toggle()\r\n            }}\r\n          >\r\n          <input type=\"text\"\r\n            maxLength=\"25\"\r\n            placeholder=\"New todo name\"\r\n            onChange={(e) => {\r\n              this.setState({\r\n                name: e.target.value\r\n              })\r\n            }}\r\n          />\r\n          <button>\r\n            Save\r\n          </button>\r\n        </form>\r\n        )}\r\n        <div className=\"todo-btn\">\r\n          <button \r\n            className=\"todo-btn__rename\"\r\n            onClick={() => {\r\n            this.toggle()\r\n          }}>\r\n            Rename\r\n          </button>\r\n          <button\r\n            className=\"todo-btn__delete\"\r\n            onClick={() => deleteTodo(todo.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n          <label >\r\n            Completed {\" \"}\r\n            <input type=\"checkbox\" checked={todo.completed} onChange={()=> toggleTodo(todo.id)}/>\r\n          </label>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { Todo } from './Todo'\r\n\r\nexport const TodoList = ({ todos, deleteTodo, renameTodo, toggleTodo}) => {\r\n  return(\r\n    <ul className=\"todo-list\">\r\n    {todos.map(todo => (\r\n      <li \r\n        className=\"new-todo\"\r\n        key={todo.id}\r\n        style={todo.completed ? {backgroundColor: \"green\"} : {backgroundColor: \"rgba(255, 0, 0, 0.603)\"}}\r\n      >\r\n        <Todo\r\n          todo={todo}\r\n          deleteTodo={deleteTodo}\r\n          renameTodo={renameTodo}\r\n          toggleTodo={toggleTodo}\r\n        />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n  )\r\n};\r\n","import React from 'react'\r\n\r\nexport const FilterTodos = ({filterTodos}) =>{\r\n  return(\r\n    <>\r\n      <h2>Filter list</h2>\r\n      <div className=\"filter-btn\">\r\n        <button onClick={(e)=> filterTodos(e.target.textContent)}>\r\n          All\r\n        </button>\r\n        <button onClick={(e)=> filterTodos(e.target.textContent)}>\r\n          Complited\r\n        </button>\r\n        <button onClick={(e)=> filterTodos(e.target.textContent)}>\r\n          Active\r\n        </button>\r\n      </div>\r\n    </>\r\n  )\r\n}","import React from 'react';\r\nimport { NewTodoForm } from './newTodoForm';\r\nimport { TodoList } from './TodoList';\r\nimport { FilterTodos } from './FilterTodos'\r\n\r\nexport class App extends React.Component {\r\n  state = {\r\n    todos: [],\r\n    visibleTodos: [],\r\n  }\r\n  \r\n  addTodo = (name) => {\r\n    this.setState(state => {\r\n      const newTodo = {\r\n        name,\r\n        id: state.todos.length +1,\r\n        completed: false,\r\n      }\r\n      return {\r\n        todos: [...state.todos, newTodo],\r\n        visibleTodos: [...state.todos, newTodo]\r\n      }\r\n    })\r\n  }\r\n  \r\n  renameTodo = (todoId, name) => {\r\n    if(name === ''){\r\n      return\r\n    }\r\n    this.setState(state => ({\r\n      visibleTodos: state.visibleTodos.map(todo => {\r\n        if(todo.id !== todoId){\r\n          return todo;\r\n        }\r\n       return {...todo, name}\r\n      }),\r\n      todos: state.todos.map(todo => {\r\n        if(todo.id !== todoId){\r\n          return todo;\r\n        }\r\n       return {...todo, name}\r\n      })\r\n    })\r\n    )\r\n  }\r\n\r\n  toggleTodo = (todoId) => {\r\n    this.setState(state => ({\r\n      visibleTodos: state.visibleTodos.map(todo => {\r\n        if(todo.id !== todoId){\r\n          return todo;\r\n        }\r\n       return {\r\n         ...todo, completed: !todo.completed\r\n        }\r\n      }),\r\n      todos: state.todos.map(todo => {\r\n        if(todo.id !== todoId){\r\n          return todo;\r\n        }\r\n       return {\r\n         ...todo, completed: !todo.completed\r\n        }\r\n      })\r\n    }))\r\n  }\r\n  \r\n  deleteTodo = (todoId) => {\r\n    this.setState(state => ({\r\n      visibleTodos: state.visibleTodos.filter(\r\n        todo => todo.id !== todoId\r\n      ),\r\n      todos: state.todos.filter(\r\n        todo => todo.id !== todoId\r\n      )\r\n    }))\r\n  }\r\n\r\n  filterTodos = (filterType) => {\r\n    if(filterType === 'All'){\r\n      this.setState({\r\n        visibleTodos: [...this.state.todos]\r\n      })\r\n    }\r\n    if(filterType === 'Complited'){\r\n      this.setState({\r\n        visibleTodos: [...this.state.todos.filter(todo => todo.completed )]\r\n      })\r\n    }\r\n    if(filterType === 'Active'){\r\n      this.setState({\r\n        visibleTodos: [...this.state.todos.filter(todo => !todo.completed)]\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <NewTodoForm \r\n          addTodo={this.addTodo} \r\n        />\r\n        <FilterTodos \r\n          filterTodos={this.filterTodos}\r\n        />\r\n        <TodoList \r\n          toggleTodo={this.toggleTodo}\r\n          todos={this.state.visibleTodos}\r\n          deleteTodo={this.deleteTodo}\r\n          renameTodo={this.renameTodo}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App/App';\nimport './App/App.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}